=====================================
Test cases for 1-my_list.py functions
=====================================
>>> MyList = __import__('1-my_list').MyList

Appending items should print those items
========================================
>>> mylist = MyList()
>>> mylist.append(1)
>>> mylist.append(2)
>>> mylist.append(3)
>>> mylist
[1, 2, 3]

Ascending appends should print descending elements when sorted
==============================================================
>>> mylist = MyList()
>>> mylist.append(5)
>>> mylist.append(4)
>>> mylist.append(3)
>>> mylist.append(2)
>>> mylist.append(1)
>>> print(mylist)
[5, 4, 3, 2, 1]
>>> mylist.print_sorted()
[1, 2, 3, 4, 5]

An already sorted list stays the same when sorted again
=======================================================
>>> mylist = MyList()
>>> mylist.append(1)
>>> mylist.append(2)
>>> mylist.append(3)
>>> mylist.append(4)
>>> print(mylist)
[1, 2, 3, 4]
>>> mylist.print_sorted()
[1, 2, 3, 4]

A list with the same element remains unchanged
==============================================
>>> mylist = MyList()
>>> mylist.append(2)
>>> mylist.append(2)
>>> mylist.append(2)
>>> mylist.append(2)
>>> print(mylist)
[2, 2, 2, 2]
>>> mylist.print_sorted()
[2, 2, 2, 2]

A list with negatives is sorted correctly
==============================================
>>> mylist = MyList()
>>> mylist.append(100)
>>> mylist.append(200)
>>> mylist.append(0)
>>> mylist.append(-200)
>>> mylist.append(-100)
>>> print(mylist)
[100, 200, 0, -200, -100]
>>> mylist.print_sorted()
[-200, -100, 0, 100, 200]

An empty list stays empty when sorted
=====================================
>>> mylist = MyList()
>>> print(mylist)
[]
>>> mylist.print_sorted()
[]
